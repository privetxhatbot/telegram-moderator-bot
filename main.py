from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, ContextTypes, filters
import json
import os

# üîê –¢–≤–æ–π —Ç–æ–∫–µ–Ω (–ù–ï –ø—É–±–ª–∏–∫—É–π –µ–≥–æ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ!)
TOKEN = "7934050267:AAGteJFHVm1108ffap66G84dXIsVQUWSfUo"

# üë§ –¢–≤–æ–π Telegram user ID ‚Äî —Ç–æ–ª—å–∫–æ —Ç—ã –º–æ–∂–µ—à—å —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º
ADMIN_ID = 8113864156

# üìÅ –§–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤
BAD_WORDS_FILE = "bad_words.json"


def load_bad_words():
    if not os.path.exists(BAD_WORDS_FILE):
        with open(BAD_WORDS_FILE, "w") as f:
            json.dump(["–º–∞—Ç1", "–º–∞—Ç2"], f)
    with open(BAD_WORDS_FILE, "r") as f:
        return json.load(f)


def save_bad_words(words):
    with open(BAD_WORDS_FILE, "w") as f:
        json.dump(words, f)


async def censor(update: Update, context: ContextTypes.DEFAULT_TYPE):
    bad_words = load_bad_words()
    message_text = update.message.text.lower()
    if any(word in message_text for word in bad_words):
        try:
            await update.message.delete()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


async def add_word(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        return
    if not context.args:
        await update.message.reply_text("–£–∫–∞–∂–∏ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–±–∞–≤–∏—Ç—å.")
        return
    word = context.args[0].lower()
    bad_words = load_bad_words()
    if word not in bad_words:
        bad_words.append(word)
        save_bad_words(bad_words)
        await update.message.reply_text(f"–°–ª–æ–≤–æ '{word}' –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫.")
    else:
        await update.message.reply_text(f"–°–ª–æ–≤–æ —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ.")


async def list_words(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        return
    words = load_bad_words()
    await update.message.reply_text("–ó–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞:\n" + "\n".join(words))


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ë–æ—Ç-—Ü–µ–Ω–∑–æ—Ä –∞–∫—Ç–∏–≤–µ–Ω. –Ø —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–ª–æ—Ö–∏–º–∏ —Å–ª–æ–≤–∞–º–∏.")


def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("addword", add_word))
    app.add_handler(CommandHandler("badwords", list_words))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), censor))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()


if __name__ == "__main__":
    main()
